version: "3.7"

services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    container_name: caddy
    env_file: .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    cap_add:
      - NET_ADMIN
    networks:
      - media-server
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy:/data
      - ./config/caddy:/config
      - ./navigator:/srv/navigator
  prowlarr:
    depends_on:
      - caddy
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-server
  jellyfin:
    depends_on:
      - caddy
    image: jellyfin/jellyfin:10.8.11
    container_name: jellyfin
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - media-server
    ports:
      - 8096:8096
    volumes:
      - ./config/jellyfin:/config
      - ./data/jellyfin/cache:/cache
      - "$OUTPUT_PATH:/media"
  api:
    depends_on:
      - prowlarr
      - caddy
      - client
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    image: oven/bun:latest
    env_file: .env
    container_name: api
    restart: unless-stopped
    networks:
      - media-server
    working_dir: /app
    command: sh -c "bun run api.js"
    volumes:
      - ./api:/app
      - type: bind
        source: ./config/prowlarr
        target: /config/prowlarr
        bind:
          create_host_path: true
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    command: sh -c "./client"
    env_file: .env
    container_name: client
    networks:
      - media-server
    volumes:
      - ./client:/app
      - ./config/client:/config
      - "$OUTPUT_PATH:/data"
    restart: unless-stopped
networks:
  media-server:
    driver: bridge