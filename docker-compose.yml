version: "3.7"

services:
  caddy:
    profiles: [serve]
    image: caddy:latest
    restart: unless-stopped
    container_name: caddy
    env_file: .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    cap_add:
      - NET_ADMIN
    networks:
      - media-server
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy:/data
      - ./config/caddy:/config
      - ./dist/navigator:/srv/navigator
  prowlarr:
    profiles: [serve]
    depends_on:
      - caddy
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-server
  jellyfin:
    profiles: [serve]
    depends_on:
      - caddy
    image: jellyfin/jellyfin:10.8.11
    container_name: jellyfin
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - media-server
    ports:
      - 8096:8096
    volumes:
      - ./config/jellyfin:/config
      - ./data/jellyfin/cache:/cache
      - "$OUTPUT_PATH:/media"
  api:
    profiles: [serve]
    depends_on:
      - prowlarr
      - caddy
      - client
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    image: oven/bun:latest
    env_file: .env
    container_name: api
    restart: unless-stopped
    networks:
      - media-server
    working_dir: /app
    command: sh -c "bun run /app/dist/api.js"
    volumes:
      - ./:/app
  client:
    depends_on:
      wireguard:
        condition: service_healthy
    profiles: [serve]
    image: alpine:latest
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    command: /app/dist/client
    env_file: .env
    container_name: client
    network_mode: container:wireguard
    volumes:
      - ./:/app
      - "$OUTPUT_PATH:/data"
    restart: unless-stopped
  wireguard:
    profiles: [serve]
    env_file: .env
    image: nxie/wireguard:latest
    container_name: wireguard
    healthcheck:
      test: bash -c "[ -f /tmp/wireguard.lock ]"
      interval: 1s
      timeout: 3s
      retries: 10
    cap_add:
      - NET_ADMIN
    networks:
      - media-server
    volumes:
      - ./config/wireguard:/config
      - /dev/net/tun:/dev/net/tun
    ports:
      - 51820:51820/udp
    restart: unless-stopped
  api-build:
    profiles: [build]
    image: oven/bun:latest
    container_name: api-build
    working_dir: /app
    command: sh -c "bun run build:api"
    volumes:
      - ./:/app
  navigator-build:
    profiles: [build]
    image: oven/bun:latest
    container_name: navigator-build
    working_dir: /app
    command: sh -c "bun run build:navigator"
    volumes:
      - ./:/app
  client-build:
    profiles: [build]
    build:
      context: ./apps/client
      dockerfile: Dockerfile.build
    container_name: client-build
    working_dir: /app/apps/client
    command: sh build.sh
    volumes:
      - ./:/app
networks:
  media-server:
    driver: bridge