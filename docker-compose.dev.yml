version: "2.3"

services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    container_name: caddy
    env_file: .env
    cap_add:
      - NET_ADMIN
    networks:
      - media-server
    ports:
      - "8000:8000"
    volumes:
      - ./Caddyfile.dev:/etc/caddy/Caddyfile
      - ./data/caddy:/data
      - ./config/caddy:/config
  jellyfin:
    depends_on:
      - caddy
    image: jellyfin/jellyfin:10.8.11
    container_name: jellyfin
    restart: unless-stopped
    networks:
      - media-server
    ports:
      - 8096:8096
    volumes:
      - ./config/jellyfin:/config
      - ./data/jellyfin/cache:/cache
      - "$OUTPUT_PATH:/media"
  navigator:
    image: oven/bun:latest
    container_name: navigator
    networks:
      - media-server
    working_dir: /app
    command: sh -c "bun install && bun run dev:navigator"
    volumes:
      - ./:/app
    ports:
      - 8001:80
  api:
    image: oven/bun:latest
    env_file: .env
    container_name: api
    restart: unless-stopped
    networks:
      - media-server
    working_dir: /app
    command: sh -c "bun install && bun run dev:api"
    volumes:
      - ./:/app
  client:
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    depends_on:
      wireguard:
        condition: service_healthy
      caddy:
        condition: service_started
    working_dir: /app/apps/client
    command: sh -c "echo starting; gow run ./src"
    container_name: client
    env_file: .env
    network_mode: container:wireguard
    volumes:
      - ./:/app
      - "$OUTPUT_PATH:/data"
    restart: unless-stopped
  wireguard:
    image: nxie/wireguard:latest
    container_name: wireguard
    healthcheck:
      test: bash -c "[ -f /tmp/wireguard.lock ]"
      interval: 1s
      timeout: 3s
      retries: 10
    cap_add:
      - NET_ADMIN
    networks:
      - media-server
    volumes:
      - ./config/wireguard:/config
      - /dev/net/tun:/dev/net/tun
    ports:
      - 51820:51820/udp
    restart: unless-stopped
networks:
  media-server:
    driver: bridge
